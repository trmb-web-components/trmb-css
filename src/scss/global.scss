@import '../../node_modules/foundation-sites/scss/util/_color.scss';
@import '../../node_modules/foundation-sites/scss/util/_value.scss';
@import '../../node_modules/foundation-sites/scss/util/_unit.scss';
@import '../../node_modules/foundation-sites/scss/util/_mixins.scss';
@import '../../node_modules/foundation-sites/scss/util/_selector.scss';
/// Font size attribute applied to `<html>` and `<body>`. We use 100% by default so the value is inherited from the user's browser settings.
/// @type Number
$global-font-size: 100% !default;
/// Global width of your site. Used by the grid to determine row width.
/// @type Number
$global-width: rem-calc(1200) !default;
/// Default line height for all type. `$global-lineheight` is 24px while `$global-font-size` is 16px
/// @type Number
$global-lineheight: 1.5 !default;
/// Colors used for buttons, callouts, links, etc. There must always be a color called `primary`.
/// @type Map
$foundation-palette: ( primary: #005F9E, secondary: #767676, success: #3adb76, warning: #ffae00, alert: #cc4b37, ) !default;
/// Color used for light gray UI items.
/// @type Color
$light-gray: #e6e6e6 !default;
/// Color used for medium gray UI items.
/// @type Color
$medium-gray: #cacaca !default;
/// Color used for dark gray UI items.
/// @type Color
$dark-gray: #8a8a8a !default;
/// Color used for black ui items.
/// @type Color
$black: #0a0a0a !default;
/// Color used for white ui items.
/// @type Color
$white: #fefefe !default;
/// Background color of the body.
/// @type Color
$body-background: $white !default;
/// Text color of the body.
/// @type Color
$body-font-color: $black !default;
/// Font stack of the body.
/// @type List
$body-font-family: 'Helvetica Neue',
Helvetica,
Roboto,
Arial,
sans-serif !default;
/// Set to `true` to enable antialiased type, using the `-webkit-font-smoothing` and `-moz-osx-font-smoothing` CSS properties.
/// @type Boolean
$body-antialiased: true !default;
/// Global value used for margin on components.
/// @type Number
$global-margin: 1rem !default;
/// Global value used for padding on components.
/// @type Number
$global-padding: 1rem !default;
/// Global value used for positioning on components.
/// @type Number
$global-position: 1rem !default;
/// Global font weight used for normal type.
/// @type Keyword | Number
$global-weight-normal: normal !default;
/// Global font weight used for bold type.
/// @type Keyword | Number
$global-weight-bold: bold !default;
/// Global value used for all elements that have a border radius.
/// @type Number
$global-radius: 0 !default;
/// Global value used for all menu styles. Can be overwritten at individual menu component level.
/// @type Number
$global-menu-padding: 0.7rem 1rem !default;
/// Global value used for all menu styles. Nested margin for submenu.
$global-menu-nested-margin: 1rem !default;
/// Sets the text direction of the CSS. Can be either `ltr` or `rtl`.
/// @type Keyword
$global-text-direction: ltr !default;
/// Enables flexbox for components that support it.
/// @type Boolean
$global-flexbox: true !default;
/// Enabled responsive breakpoints for prototypes if applicable
/// @type Boolean
$global-prototype-breakpoints: false !default;
/// Button cursor's value, `auto` by default
/// @type Keyword
$global-button-cursor: auto !default;
// Internal variables used for text direction
$global-left: if($global-text-direction==rtl, right, left);
$global-right: if($global-text-direction==rtl, left, right);
// Internal variable that contains the flex justifying options
$-zf-flex-justify: -zf-flex-justify($global-text-direction);
/// Global tolerance for color pick contrast.
/// @type Number
$global-color-pick-contrast-tolerance: 0 !default;

// Trimble color variables
//Brand colors
$col_trimble_blue_dark:#002D5B;
$col_trimble_blue:#00437B;
$col_trimble_blue_mid:#005F9E;
$col_trimble_blue_light:#009AD9;
$col_trimble_yellow: #FFBE00;
$col_trimble_green: #4D6F33;
$col_trimble_red: #A51D25;

//Grayscale
$col_white: #FFFFFF;
$col_gray_half: #f9f9fb;
$col_gray_light: #F3F3F7;
$col_gray_0: #EAEAEF;
$col_gray_1: #E2E2E7;
$col_gray_2: #D0D0D7;
$col_gray_3: #BFBFC6;
$col_gray_4: #AEAEB6;
$col_gray_5: #9D9DA6;
$col_gray_6: #8C8B96;
$col_gray_7: #7B7A86;
$col_gray_8: #6A6976;
$col_gray_9: #595868;
$col_gray_10: #474655;
$col_trimble_gray: #363545;
$col_gray_dark_1: #262533;
$col_gray_dark_2: #1B1A26;
$col_gray_dark_3: #0B0A12;
$col_black: #000000;

//Blue Buttons & Notifications
$col_blue: #0D6AA8;
$col_blue_light: #197CB6;
$col_blue_dark: #07599B;
$col_blue_pale: #CFE1EE;

//Green Buttons & Notifications
$col_green: #5E9331;
$col_green_light: #72A544;
$col_green_dark: #4A821F;
$col_green_pale: #DFE9D6;

//Yellow Buttons
$col_yellow: #FFBE00;
$col_yellow_light: #FFD200;
$col_yellow_dark: #FFA500;
$col_yellow_pale: #FFF2CC;

//Orange Notifications
$col_orange: #ff8b00;
$col_orange_light: #ffa500;
$col_orange_dark: #ff6e00;
$col_orange_pale: #FFE8CC;

//Red Buttons & Notifications
$col_red: #C81922;
$col_red_light: #D52A33;
$col_red_dark: #BC0911;
$col_red_pale: #F4D1D3;

//Markup
$col_markup: #ff00ff;

//Checkbox hover
$col_blue_hover: rgba(13, 106, 168, 0.2);